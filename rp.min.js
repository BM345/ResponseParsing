class RPNode{constructor(){this.supernode=null,this.depth=0,this.type="",this.subtype="",this.text="",this.latex="",this.asciiMath="",this.isComplete=!1,this.start=0,this.end=0}get length(){return this.end-this.start}get subnodes(){return[]}setDepth(e=0){this.depth=e;var t=this;this.subnodes.forEach(i=>{i.supernode=t,i.setDepth(e+1)})}}class RPNumberNode extends RPNode{constructor(){super(),this.type="number",this.integralPart="",this.decimalPart="",this.sign="",this.signIsExplicit=!1,this.numberOfLeadingZeros=0,this.numberOfTrailingZeros=0,this.minimumNumberOfSignificantFigures=0,this.maximumNumberOfSignificantFigures=0,this.numberOfDecimalPlaces=0}}class RPFractionNode extends RPNode{constructor(){super(),this.type="fraction",this.numerator=null,this.denominator=null}get subnodes(){return[this.numerator,this.denominator]}}class RPMixedFractionNode extends RPNode{constructor(){super(),this.type="mixedFraction",this.wholePart=null,this.fractionPart=null}get subnodes(){return[this.wholePart,this.fractionPart]}}class RPRadicalNode extends RPNode{constructor(){super(),this.type="radical",this.radix=2,this.radixIsImplicit=!0,this.radicand=null}get subnodes(){return[this.radicand]}}class RPIdentifierNode extends RPNode{constructor(){super(),this.type="identifier"}}class RPOperatorNode extends RPNode{constructor(){super(),this.type="operator"}get precedence(){return"+-*/^".indexOf(this.text)}}class RPBinomialOperationNode extends RPNode{constructor(){super(),this.type="binomialOperation",this.operand1=null,this.operand2=null}}class RPAdditionNode extends RPBinomialOperationNode{constructor(){super(),this.subtype="addition"}}class RPSubtractionNode extends RPBinomialOperationNode{constructor(){super(),this.subtype="subtraction"}}class RPMultiplicationNode extends RPBinomialOperationNode{constructor(){super(),this.subtype="multiplication"}}class RPDivisionNode extends RPBinomialOperationNode{constructor(){super(),this.subtype="division"}}function isAnyOf(e,t){return e.split("").filter(e=>e==t).length>0}class Marker{constructor(){this.position=0}copy(){var e=new Marker;return e.position=this.position,e}}class ParserSettings{constructor(){this.removeLeadingZerosFromSimplifiedForms=!1,this.addLeadingZeroToDecimalsForSimplifiedForms=!0}}class ResponseParser{constructor(){this.settings=new ParserSettings}getParseResult(e){var t=new Marker,i=this.parseExpression(e,t);return null!==i&&t.position==e.length?(i.setDepth(),i):null}anyAt(e,t,i){for(var r=0;r<e.length;r++){var n=e[r];if(t.substring(i.position,i.position+n.length)==n)return n}return!1}parseExpression(e,t){for(var i=[],r=[];t.position<e.length;){var n=this.parseBinomialOperator(e,t.copy());if(null===n&&(n=this.parseMixedFraction(e,t.copy())),null===n&&(n=this.parseFraction(e,t.copy())),null===n&&(n=this.parseSquareRoot(e,t.copy())),null===n&&(n=this.parseNumber(e,t.copy())),null===n&&(n=this.parseIdentifier(e,t.copy())),null===n)break;if("operator"==n.type){for(var s=r.length-1;s>=0;s--)if(r[s].precedence>=n.precedence){if(i.length>=2&&"+"==r[s].text)(o=new RPAdditionNode).operand2=i.pop(),o.operand1=i.pop(),i.push(o);if(i.length>=2&&"-"==r[s].text)(a=new RPSubtractionNode).operand2=i.pop(),a.operand1=i.pop(),i.push(a);if(i.length>=2&&"*"==r[s].text)(l=new RPMultiplicationNode).operand2=i.pop(),l.operand1=i.pop(),i.push(l);if(i.length>=2&&"/"==r[s].text)(p=new RPDivisionNode).operand2=i.pop(),p.operand1=i.pop(),i.push(p)}r.push(n)}else i.push(n);t.position+=n.length}for(s=r.length-1;s>=0;s--){var o,a,l,p;if(i.length>=2&&"+"==r[s].text)(o=new RPAdditionNode).operand2=i.pop(),o.operand1=i.pop(),i.push(o);if(i.length>=2&&"-"==r[s].text)(a=new RPSubtractionNode).operand2=i.pop(),a.operand1=i.pop(),i.push(a);if(i.length>=2&&"*"==r[s].text)(l=new RPMultiplicationNode).operand2=i.pop(),l.operand1=i.pop(),i.push(l);if(i.length>=2&&"/"==r[s].text)(p=new RPDivisionNode).operand2=i.pop(),p.operand1=i.pop(),i.push(p)}return console.log(i),console.log(r),1==i.length?i[0]:null}parseBinomialOperator(e,t){var i=t.position,r=e.charAt(t.position);if(!isAnyOf("+-*/^",r))return null;t.position++;var n=t.position,s=new RPOperatorNode;return s.text=r,s.latex="*"==r?"\\times":r,s.asciiMath=r,s.start=i,s.end=n,s}parseIdentifier(e,t){var i=t.position,r=e.charAt(t.position);if(!isAnyOf("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",r))return null;t.position++;var n=t.position,s=new RPIdentifierNode;return s.text=r,s.latex=r,s.asciiMath=r,s.start=i,s.end=n,s}parseSquareRoot(e,t){var i=t.position,r=this.anyAt(["sqrt","squareroot","root"],e,t);if(!1===r)return null;t.position+=r.length;var n=this.parseWhiteSpace(e,t);if("("!=e.charAt(t.position))return null;t.position+=1;var s=this.parseWhiteSpace(e,t),o=this.parseNumber(e,t),a=this.parseWhiteSpace(e,t);if(")"!=e.charAt(t.position))return null;t.position+=1;var l=t.position,p=r,u=null!==n?n.text:"",c=null!==s?s.text:"",h=o.text,d=null!==a?a.text:"",m=new RPRadicalNode;return m.text=p+u+"("+c+h+d+")",m.latex="\\sqrt{"+o.latex+"}",m.asciiMath="sqrt("+o.asciiMath+")",m.start=i,m.end=l,m.radix=2,m.radixIsImplicit=!0,m.radicand=o,m}parseMixedFraction(e,t){var i=t.position,r=this.parseNumber(e,t);if(null===r)return null;var n=this.parseWhiteSpace(e,t);if(null===n)return null;var s=this.parseFraction(e,t);if(null===s)return null;var o=t.position,a=new RPMixedFractionNode;return a.text=r.text+n.text+s.text,a.latex=r.latex+" "+s.latex,a.asciiMath=r.asciiMath+" "+s.asciiMath,a.start=i,a.end=o,a.wholePart=r,a.fractionPart=s,a}parseFraction(e,t){var i=t.position,r=this.parseNumber(e,t);if(null===r)return null;var n=this.parseWhiteSpace(e,t);if("/"!==e.charAt(t.position))return null;t.position+=1;var s=this.parseWhiteSpace(e,t),o=this.parseNumber(e,t),a=t.position,l=null!==o,p=r.text,u=null===n?"":n.text,c=null===s?"":s.text,h=null===o?"":o.text,d=(r.simplestForm,null===o||o.simplestForm,new RPFractionNode);return d.text=p+u+"/"+c+h,d.latex="\\frac{"+r.latex+"}{"+o.latex+"}",d.asciiMath="frac "+r.asciiMath+" "+o.asciiMath,d.start=i,d.end=a,d.isComplete=l,d.numerator=r,d.denominator=o,d}parseNumber(e,t){var i="",r=t.position,n="",s="",o="",a="positive",l=!1,p=e.charAt(t.position);"+"==p?(o="+",l=!0,t.position++):"-"==p&&(o="-",a="negative",l=!0,t.position++);for(var u=0,c=0,h=0,d=0,m=0,f=0;t.position<e.length;){var g=e.charAt(t.position);if(isAnyOf("0123456789",g))i+=g,t.position++,0==f?n+=g:(s+=g,d++),"0"==g&&0==h&&0==f?u++:"0"!=g?(h+=m,m=0,h++):"0"==g&&h>0&&m++;else{if("."!=g)break;if(0!=f)break;i+=g,t.position++,s+=g,f++}}var x=0==h&&i.length>0;x&&(a="zero");var v=0,P=0;x?(v=1,P=1,f>0&&(c=d)):f>0?(v=h+m,P=h+m,c=m):(v=h,P=h+m);var b=t.position,N=0==f?"integer":"decimalNumber",R="";""!=n||""!=s&&"."!=s?""==n?R=this.settings.addLeadingZeroToDecimalsForSimplifiedForms?"0":"":this.settings.removeLeadingZerosFromSimplifiedForms?(R=n.slice(u),this.settings.addLeadingZeroToDecimalsForSimplifiedForms&&(R=""==R?"0":R)):R=n:R="";var y="."==s?"":s,w=x?R+y:o+R+y;if(o+i=="")return null;var S=new RPNumberNode;return S.subtype=N,S.text=o+i,S.integralPart=n,S.decimalPart=s,S.latex=w,S.asciiMath=w,S.start=r,S.end=b,S.sign=a,S.signIsExplicit=l,S.numberOfLeadingZeros=u,S.numberOfTrailingZeros=c,S.minimumNumberOfSignificantFigures=v,S.maximumNumberOfSignificantFigures=P,S.numberOfDecimalPlaces=d,S}parseWhiteSpace(e,t){for(var i="",r=t.position;t.position<e.length;){var n=e.charAt(t.position);if(!isAnyOf(" \t\n",n))break;i+=n,t.position+=1}var s=t.position;return""==i?null:{type:"whiteSpace",text:i,latex:i,asciiMath:i,start:r,end:s,length:i.length,compressedWhiteSpace:" "}}}class Validator{constructor(){this.inputs=[],this.rp=new ResponseParser,this.controlKeys=["ShiftLeft","ShiftRight","Backspace","Enter","Tab","CapsLock","MetaLeft","MetaRight","AltLeft","AltRight","ControlLeft","ControlRight","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Escape"]}getNewInputValueOnKeyDown(e,t){var i=e.value.length;return e.selectionStart==i&&e.selectionEnd==i?e.value+t.key:e.value.slice(0,e.selectionStart)+t.key+e.value.slice(e.selectionEnd,i)}addInput(e,t,i,r,n){this.inputs.push([e,t,i,r,n]);var s=this;e.onkeydown=function(r){if(0==s.controlKeys.filter(e=>r.code==e).length){var n=s.getNewInputValueOnKeyDown(e,r),o=s.rp.getParseResult(n);if(console.log(n),console.log(o),null===o)return void r.preventDefault();"integer"!=t||"number"==o.type&&"integer"==o.subtype||r.preventDefault(),"decimalNumber"==t&&"number"!=o.type&&r.preventDefault(),"fraction"==t&&"fraction"!=o.type&&"number"!=o.type&&r.preventDefault(),null!==o?katex.render(o.latex,i):katex.render("",i)}},e.onkeyup=function(t){r.innerText="";var n=s.rp.getParseResult(e.value);null!==n?katex.render(n.latex,i):katex.render("",i)},n.onmousedown=function(i){var n=e.value,o=s.rp.getParseResult(n);console.log(n),console.log(o),r.innerText="","integer"==t&&(null===o||"number"!=o.type&&"integer"==o.subtype)&&(r.innerText="Your answer must be a whole number."),"decimalNumber"!=t||null!==o&&"number"==o.type||(r.innerText="Your answer must be a decimal number or a whole number.")}}}